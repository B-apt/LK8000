apply plugin: "com.android.application"

android {
    compileSdkVersion 31
    buildToolsVersion "31.0.0"
    ndkVersion "23.1.7779620"

    defaultConfig {
        applicationId "org.lk8000"
        minSdkVersion 16
        targetSdkVersion 31
        versionCode 80
        versionName "7.3.9"
        setProperty("archivesBaseName", "LK8000-$versionName")
        // Required when setting minSdkVersion to 20 or lower
        multiDexEnabled true

        externalNativeBuild {
            cmake {
                // Passes optional arguments to CMake.
                arguments "-DANDROID_ARM_NEON=TRUE", "-DANDROID_STL=c++_shared"

                // Sets a flag to enable format macro constants for the C compiler.
                cFlags "-D__STDC_FORMAT_MACROS"

                // Sets optional flags for the C++ compiler.
                cppFlags "-std=c++17"
            }
        }
    }
    buildFeatures {
        prefab true
        viewBinding true
    }
    sourceSets {
        main {
            java.srcDirs += ["../../android/src"]
            manifest.srcFile "../../android/AndroidManifest.xml"
            res.srcDirs = ["src/main/res",
                           "../../android/res"]
        }
    }
    buildTypes {
        release {
            minifyEnabled false

            // play store identify app using <applicationId, signing certificate> pair
            // we can't change this is because first distro on play Store has been made with this suffix
            applicationIdSuffix ".beta"

            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
        }
        beta {
            initWith(buildTypes.release)

            applicationIdSuffix ".test"
        }
    }
    externalNativeBuild {
        cmake {
            version "3.18.1"
            path "../../CMakeLists.txt"
        }
    }
    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ["*.jar"], dir: "libs")
    implementation "androidx.core:core:1.7.0"
    implementation "androidx.constraintlayout:constraintlayout:2.1.2"

    implementation "androidx.camera:camera-camera2:1.1.0-alpha12"
    implementation "androidx.camera:camera-lifecycle:1.1.0-alpha12"
    implementation "androidx.camera:camera-view:1.0.0-alpha32"

    implementation "com.google.zxing:core:3.4.1"

    implementation "com.github.ytai.ioio:IOIOLibAndroidBluetooth:5.07"
    implementation "com.github.ytai.ioio:IOIOLibAndroidAccessory:5.07"
    implementation "com.github.ytai.ioio:IOIOLibAndroidDevice:5.07"

    implementation "com.github.felHR85:UsbSerial:6.1.0"

    implementation "com.github.brunotl:geographiclib-prefab:1.52.0"

    implementation "com.github.brunotl:boost_intrusive:1.76.0"
    implementation "com.github.brunotl:boost_container:1.76.0"

    implementation "com.google.oboe:oboe:1.6.1"
    implementation "androidx.appcompat:appcompat:1.4.0"
    implementation "com.google.android.material:material:1.4.0"

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
}

clean() {
    delete "src/main/assets/language",
           "src/main/assets/distribution",
           "src/main/assets/fonts",
           "src/main/assets/polars",
           "src/main/assets/sounds",
           "src/main/assets/CREDITS.TXT",
           "src/main/assets/DEFAULT_MENU.TXT"
}

task syncAsset(type: Sync) {
    from "../../Common/Data/Language",
            "../../Common/Distribution/LK8000/_System/"
    into "src/main/assets"
    include "DEFAULT_MENU.TXT",
            "CREDITS.TXT"
    preserve {
        include "bitmaps/**"
    }
    duplicatesStrategy "WARN"
}
task syncAssetLanguages(type: Sync) {
    from "../../Common/Data/Language/Translations",
            "../../Common/Data/Language"
    into "src/main/assets/language"
    include "*.json"
}
task syncAssetPolars(type: Sync) {
    from "../../Common/Distribution/LK8000/_Polars"
    into "src/main/assets/polars"
    include "*.plr"
    exclude "Example.*"
}
task syncAssetSounds(type: Sync) {
    from "../../Common/Data/Sounds",
            "../../Common/Distribution/LK8000/_System/_Sounds",
            "../../Common/Distribution/LK8000/_System/_Sounds/OPTIONALS"
    into "src/main/assets/sounds"
    include "*.wav",
            "*.WAV"
    duplicatesStrategy "WARN"
}
task syncAssetFonts(type: Sync) {
    from "../../Common/Data/Fonts"
    into "src/main/assets/fonts"
    include "*.ttf"
}
task syncAssetDistribtionMaps(type: Sync) {
    from "../../Common/Distribution/LK8000/_Maps"
    into "src/main/assets/distribution/maps"
}
task syncAssetDistribtionWaypoints(type: Sync) {
    from "../../Common/Distribution/LK8000/_Waypoints"
    into "src/main/assets/distribution/waypoints"
}
task syncAssetDistribtionAirspaces(type: Sync) {
    from "../../Common/Distribution/LK8000/_Airspaces"
    into "src/main/assets/distribution/airspaces"
}
task syncAssetDistribtionTasks(type: Sync) {
    from "../../Common/Distribution/LK8000/_Tasks"
    into "src/main/assets/distribution/tasks"
}
task syncAssetDistribtionLogger(type: Sync) {
    from "../../Common/Distribution/LK8000/_Logger"
    into "src/main/assets/distribution/logger"
}
task syncAssetDistribtionConfiguration(type: Sync) {
    from "../../Common/Distribution/LK8000/_Configuration"
    into "src/main/assets/distribution/configuration"
    include "DEMO.prf",
            "CAR.prf",
            "TREKKING.prf",
            "NOTEDEMO.TXT",
            "IDFLARM.TXT"
}
task syncAssetDistribtionPolars(type: Sync) {
    from "../../Common/Distribution/LK8000/_Polars"
    into "src/main/assets/distribution/polars"
    include "Example.*"
}

preBuild.dependsOn(syncAsset)
preBuild.dependsOn(syncAssetLanguages)
preBuild.dependsOn(syncAssetPolars)
preBuild.dependsOn(syncAssetSounds)
preBuild.dependsOn(syncAssetFonts)
preBuild.dependsOn(syncAssetDistribtionMaps)
preBuild.dependsOn(syncAssetDistribtionWaypoints)
preBuild.dependsOn(syncAssetDistribtionAirspaces)
preBuild.dependsOn(syncAssetDistribtionTasks)
preBuild.dependsOn(syncAssetDistribtionLogger)
preBuild.dependsOn(syncAssetDistribtionConfiguration)
preBuild.dependsOn(syncAssetDistribtionPolars)
